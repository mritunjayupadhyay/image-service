service: s3-upload-service

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-south-1
  stage: ${opt:stage, 'dev'}
  environment:
    QUESTION_BUCKET: ${self:custom.questionBucket}
    EXAM_BUCKET: ${self:custom.examBucket}
    BOOKS_BUCKET: ${self:custom.booksBucket}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
          Resource: 
            - arn:aws:s3:::${self:custom.questionBucket}/*
            - arn:aws:s3:::${self:custom.examBucket}/*
            - arn:aws:s3:::${self:custom.booksBucket}/*
       
custom:
  questionBucket: ${self:provider.stage}-question-uploads
  examBucket: ${self:provider.stage}-exam-uploads
  booksBucket: ${self:provider.stage}-books-uploads

functions:
  generateUploadUrl:
    handler: dist/handlers/generate-upload-url.handler
    events:
      - http:
          path: /generate-upload-url
          method: post
          cors: true
          authorizer:
            arn: ${cf:shared-clerk-authorizer-production.ClerkAuthorizerArn}
            type: token
            identitySource: method.request.header.Authorization
            resultTtlInSeconds: 300
resources:
  Resources:
    QuestionUploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.questionBucket}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - '*'
              AllowedMethods:
                - PUT
                - POST
                - GET
              AllowedOrigins:
                - '*'  # Restrict to specific domains in production
    
    ExamUploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.examBucket}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - '*'
              AllowedMethods:
                - PUT
                - POST
                - GET
              AllowedOrigins:
                - '*'
    
    BooksUploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.booksBucket}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - '*'
              AllowedMethods:
                - PUT
                - POST
                - GET
              AllowedOrigins:
                - '*'